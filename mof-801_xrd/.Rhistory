install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
df <- data.frame(serial = c(1:10), value=c(2:20))
c(1:10)
df <- data.frame(serial = c(1:10), value=c(1:10))
print(df)
ggplot(data=df)+
geom_point(mapping=aes(x=serial, y=value))
install.packages("tidyverse")
.libPaths('C:/Users/A70459/AppData/Local/R/win-library/4.2')
.libPaths
.libPaths()
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("ggplot2", "reshape2", "dplyr"))
install.packages("Rtools")
install.packages("tidyverse")
.libPaths("C:\Users\A70459\Documents\my_r_projects")
.libPaths()
install.pacakges("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tiidyverse)
library(tidyverse)
df <- data.frame(x=c(1:10), y=c(1:10))
ggplot(data=df)+
geom_point(mapping=aes(x=x, y=y))
ggplot(data=df, mapping=aes(x=x, y=y))+
geom_point()+
geom_smooth()
# Arrange Rows with arrange()
arrange(flights, year, month, day)
library(tidyverse)
library(ggplot2)
library(nycflights13)
# Arrange Rows with arrange()
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
num_range("x", 1:3)
?one_of()
?one_of
one_of(flights)
vars <- c(
"year", "month", "day", "dep_delay", "arr_delay"
)
one_of(flights, vars)
select(flights, one_of())
select(flights, one_of(vars))
view(select(flights, one_of(vars)))
view(flights)
view(flights)
select(flights, contains("TIME"))
print(x)
for (x in 1:10) {
print(x)
}
clean
cls
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
for (x in 1:10) {
dname <- "df_" + as.string(x)
print(dname)
}
for (x in 1:10) {
dname <- "df_" + as.String(x)
print(dname)
}
library(tidyverse)
library(ggplot2)
typeof(i)
i <- 0
typeof(i)
type.conver(i, as.is="string")
type.conver(i)
type.convert(i)
type.convert(i, as.is = String)
type.convert(i, as.is = "string")
for (x in 1:10) {
dname <- "df_" + type.convert(x, as.is = "string")
print(dname)
}
for (x in 1:10) {
dname <- paste("df_",type.convert(x, as.is = "string"))
print(dname)
}
for (x in 1:10) {
dname <- paste("df_", sep="", type.convert(x, as.is = "string"))
print(dname)
}
csv_files <- list.files(pattern=".csv",all.files=TRUE, full.names=FALSE)
x <-0
for (file in csv_files) {
print(file)
dname <- paste("df_", sep="", type.convert(x, as.is = "string"))
dname <- read.csv(file)
}
head(df_1)
x <-0
for (file in csv_files) {
print(file)
paste("df_", sep="", type.convert(x, as.is = "string")) <- read.csv(file)
}
df_1
x <-0
df_1 <-0
for (file in csv_files) {
print(file)
paste("df_", sep="", type.convert(x, as.is = "string")) <- read.csv(file)
}
df_1
df_1 <-0
for (file in csv_files) {
print(file)
paste("df_", sep="", type.convert(x, as.is = "string")) <- read.csv(file)
}
df_1
5L-0 <- read.csv(csv_files[0:0])
5L-0 <- read.csv(csv_files[1:1])
df_1 <- read.csv(csv_files[1:1])
head(df_1)
df_1 <- read.csv(csv_files[1:1])
csv_files <- list.files(pattern=".csv",all.files=TRUE, full.names=FALSE)
df_1 <- read.csv(csv_files[1:1])
df_1 <- read.csv(csv_files[1:1])
csv_files[1:1]
csv_files <- list.files(pattern=".csv",all.files=TRUE, full.names=FALSE)
csv_files[1:1]
setwd("~/my_r_projects/mof-801_xrd_copied")
csv_files <- list.files(pattern=".csv",all.files=TRUE, full.names=FALSE)
csv_files[1:1]
df_1 <- read.csv(csv_files[1:1])
head(df_1)
df_0 <- read.csv(csv_files[1:1])
df_1 <- read.csv(csv_files[2:2])
df_2 <- read.csv(csv_files[3:3])
df_3 <- read.csv(csv_files[4:4])
df_4 <- read.csv(csv_files[5:5])
df_5 <- read.csv(csv_files[6:6])
colnames(df_0)
p <- ggplot()+
geom_line(data=df_0, mapping=aes(x="Pos....2θ.", y="Iobs..cps."))
p <- ggplot(mapping=aes(x="Pos....2θ.", y="Iobs..cps."))
p + geom_line(data=df_0)
p <- ggplot(mapping=aes(x=Pos....2θ., y=Iobs..cps.))
p + geom_line(data=df_0)
p +
geom_line(data=df_0)+
geom_line(data=df_1)+
geom_line(data=df_2)+
geom_line(data=df_3)+
geom_line(data=df_4)+
geom_line(data=df_5)
p +
geom_line(data=df_0, color="blue")+
geom_line(data=df_1, color="red")+
geom_line(data=df_2, color="yellow")+
geom_line(data=df_3, color="green")+
geom_line(data=df_4, color="black")+
geom_line(data=df_5, color="purple")
p +
geom_line(data=df_0, color="blue")+
geom_line(data=df_1, color="red")+
geom_line(data=df_2, color="yellow")+
geom_line(data=df_3, color="green")+
geom_line(data=df_4, color="black")+
geom_line(data=df_5, color="purple")+
facet_grid(rows=6)
p +
geom_line(data=df_0, color="blue")+
facet_grid(rows=6)
geom_line(data=df_1, color="red")+
geom_line(data=df_2, color="yellow")+
geom_line(data=df_3, color="green")+
geom_line(data=df_4, color="black")+
geom_line(data=df_5, color="purple")
# open csv file that contains all data
df <- read.csv("5L-all.csv")
head(df)
col[1::]
col = colnames(df)
col[1:6]
col = colnames(df)
col[1:6]
col[2:7]
ggolot(data=df)+
geom_line(mapping=aes(x=angle, y=[col[2:7]]))
ggolot(data=df)+
geom_line(mapping=aes(x=angle, y=X5L.0))
gglot(data=df)+
geom_line(mapping=aes(x=angle, y=X5L.0))
ggplot(data=df)+
geom_line(mapping=aes(x=angle, y=X5L.0))
df_filtered <- filter(df, df&angle < 29)
df_filtered <- filter(df, df$angle < 29)
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))
df_filtered <- filter(df, df$angle < 29 & df$angle > 5)
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))
View(df_filtered)
geom_line(mapping=aes(x=angle, y=[X5L.0, X5L.1])
geom_line(mapping=aes(x=angle, y=X5L.0, X5L.1)
ggplot(data=df_filtered)+
geom_line(mapping=aes(y=X5L.0)
ggplot(data=df_filtered, x=angle)+
ggplot(data=df_filtered, x=angle)+
geom_line(mapping=aes(y=X5L.0))+
geom_line(mapping=aes(y=X5L.1))+
geom_line(mapping=aes(y=X5L.2))+
geom_line(mapping=aes(y=X5L.3))+
geom_line(mapping=aes(y=X5L.4))+
geom_line(mapping=aes(y=X5L.5))+
# Backup
df <- read.csv(csv_files[1:1]) # This is the way of slicing a list in R
ggplot(data=df_filtered, x=angle)+
geom_line(mapping=aes(y=X5L.0))+
geom_line(mapping=aes(y=X5L.1))+
geom_line(mapping=aes(y=X5L.2))+
geom_line(mapping=aes(y=X5L.3))+
geom_line(mapping=aes(y=X5L.4))+
geom_line(mapping=aes(y=X5L.5))
ggplot(data=df_filtered, x=angle)+
geom_line(mapping=aes(y=X5L.0))+
geom_line(mapping=aes(y=X5L.1))+
geom_line(mapping=aes(y=X5L.2))+
geom_line(mapping=aes(y=X5L.3))+
geom_line(mapping=aes(y=X5L.4))+
geom_line(mapping=aes(y=X5L.5))
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~col)
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~)
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~)
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap()
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~colnames(df))
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~colnames(df)[1:7])
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~colnames(df)[1:7])
ggplot(data=df_filtered)+
geom_line(mapping=aes(x=angle, y=X5L.0))+
geom_line(mapping=aes(x=angle, y=X5L.1))+
geom_line(mapping=aes(x=angle, y=X5L.2))+
geom_line(mapping=aes(x=angle, y=X5L.3))+
geom_line(mapping=aes(x=angle, y=X5L.4))+
geom_line(mapping=aes(x=angle, y=X5L.5))+
facet_wrap(~colnames(df)[1:8])
